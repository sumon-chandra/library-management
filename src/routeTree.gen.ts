/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as CreateBookRouteImport } from './routes/create-book'
import { Route as BooksRouteImport } from './routes/books'
import { Route as IndexRouteImport } from './routes/index'
import { Route as EditBookBookIdRouteImport } from './routes/edit-book.$bookId'
import { Route as BorrowBookIdRouteImport } from './routes/borrow.$bookId'

const CreateBookRoute = CreateBookRouteImport.update({
  id: '/create-book',
  path: '/create-book',
  getParentRoute: () => rootRouteImport,
} as any)
const BooksRoute = BooksRouteImport.update({
  id: '/books',
  path: '/books',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const EditBookBookIdRoute = EditBookBookIdRouteImport.update({
  id: '/edit-book/$bookId',
  path: '/edit-book/$bookId',
  getParentRoute: () => rootRouteImport,
} as any)
const BorrowBookIdRoute = BorrowBookIdRouteImport.update({
  id: '/borrow/$bookId',
  path: '/borrow/$bookId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/books': typeof BooksRoute
  '/create-book': typeof CreateBookRoute
  '/borrow/$bookId': typeof BorrowBookIdRoute
  '/edit-book/$bookId': typeof EditBookBookIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/books': typeof BooksRoute
  '/create-book': typeof CreateBookRoute
  '/borrow/$bookId': typeof BorrowBookIdRoute
  '/edit-book/$bookId': typeof EditBookBookIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/books': typeof BooksRoute
  '/create-book': typeof CreateBookRoute
  '/borrow/$bookId': typeof BorrowBookIdRoute
  '/edit-book/$bookId': typeof EditBookBookIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/books'
    | '/create-book'
    | '/borrow/$bookId'
    | '/edit-book/$bookId'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/books' | '/create-book' | '/borrow/$bookId' | '/edit-book/$bookId'
  id:
    | '__root__'
    | '/'
    | '/books'
    | '/create-book'
    | '/borrow/$bookId'
    | '/edit-book/$bookId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BooksRoute: typeof BooksRoute
  CreateBookRoute: typeof CreateBookRoute
  BorrowBookIdRoute: typeof BorrowBookIdRoute
  EditBookBookIdRoute: typeof EditBookBookIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/create-book': {
      id: '/create-book'
      path: '/create-book'
      fullPath: '/create-book'
      preLoaderRoute: typeof CreateBookRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/books': {
      id: '/books'
      path: '/books'
      fullPath: '/books'
      preLoaderRoute: typeof BooksRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/edit-book/$bookId': {
      id: '/edit-book/$bookId'
      path: '/edit-book/$bookId'
      fullPath: '/edit-book/$bookId'
      preLoaderRoute: typeof EditBookBookIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/borrow/$bookId': {
      id: '/borrow/$bookId'
      path: '/borrow/$bookId'
      fullPath: '/borrow/$bookId'
      preLoaderRoute: typeof BorrowBookIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BooksRoute: BooksRoute,
  CreateBookRoute: CreateBookRoute,
  BorrowBookIdRoute: BorrowBookIdRoute,
  EditBookBookIdRoute: EditBookBookIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
